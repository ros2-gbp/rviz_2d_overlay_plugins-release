%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/humble/.*$
%global __requires_exclude_from ^/opt/ros/humble/.*$

Name:           ros-humble-rviz-2d-overlay-plugins
Version:        1.3.1
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS rviz_2d_overlay_plugins package

License:        BSD-3-Clause
Source0:        %{name}-%{version}.tar.gz

Requires:       boost-devel
Requires:       boost-python%{python3_pkgversion}-devel
Requires:       ros-humble-rviz-2d-overlay-msgs
Requires:       ros-humble-rviz-common
Requires:       ros-humble-rviz-ogre-vendor
Requires:       ros-humble-rviz-rendering
Requires:       ros-humble-std-msgs
Requires:       ros-humble-ros-workspace
BuildRequires:  boost-devel
BuildRequires:  boost-python%{python3_pkgversion}-devel
BuildRequires:  ros-humble-ament-cmake
BuildRequires:  ros-humble-rviz-2d-overlay-msgs
BuildRequires:  ros-humble-rviz-common
BuildRequires:  ros-humble-rviz-ogre-vendor
BuildRequires:  ros-humble-rviz-rendering
BuildRequires:  ros-humble-std-msgs
BuildRequires:  ros-humble-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
RViz2 plugin for 2D overlays in the 3D view. Mainly a ROS2 port of the JSK
overlay plugin (https://github.com/jsk-ros-pkg/jsk_visualization).

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/humble" \
    -DAMENT_PREFIX_PATH="/opt/ros/humble" \
    -DCMAKE_PREFIX_PATH="/opt/ros/humble" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/humble

%changelog
* Sun Jun 01 2025 Team Spatzenhirn <team-spatzenhirn@uni-ulm.de> - 1.3.1-1
- Autogenerated by Bloom

* Thu May 18 2023 Team Spatzenhirn <team-spatzenhirn@uni-ulm.de> - 1.3.0-1
- Autogenerated by Bloom

* Fri Sep 30 2022 Team Spatzenhirn <team-spatzenhirn@uni-ulm.de> - 1.2.1-1
- Autogenerated by Bloom

* Tue Sep 27 2022 Team Spatzenhirn <team-spatzenhirn@uni-ulm.de> - 1.2.0-2
- Autogenerated by Bloom

* Tue Sep 27 2022 Team Spatzenhirn <team-spatzenhirn@uni-ulm.de> - 1.2.0-1
- Autogenerated by Bloom

